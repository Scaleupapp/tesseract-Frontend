{"ast":null,"code":"var _jsxFileName = \"/Users/nirpekshnandan/Downloads/tesseract-Frontend/src/pages/BudgetWorkflowDesigner.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WorkflowDesigner from \"./WorkflowDesigner\";\nimport API from \"../utils/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BudgetWorkflowDesigner = ({\n  orgId\n}) => {\n  _s();\n  const [workflows, setWorkflows] = useState([]);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    // Fetch existing workflows for the organisation\n    const fetchWorkflows = async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await API.get(\"/workflows\", {\n          params: {\n            organisationId: orgId,\n            component: \"Budget\"\n          }\n        });\n        setWorkflows(data);\n      } catch (error) {\n        console.error(\"Error fetching workflows:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchWorkflows();\n  }, [orgId]);\n  const handleSaveWorkflow = async newWorkflow => {\n    try {\n      const {\n        data\n      } = await API.post(\"/workflows/create\", {\n        organisationId: orgId,\n        component: \"Budget\",\n        workflow: newWorkflow\n      });\n      setWorkflows(prev => [...prev, data]);\n      alert(\"Workflow saved successfully!\");\n    } catch (error) {\n      console.error(\"Error saving workflow:\", error);\n      alert(\"Failed to save workflow.\");\n    }\n  };\n  const handleUpdateWorkflow = async (workflowId, updatedWorkflow) => {\n    try {\n      const {\n        data\n      } = await API.put(`/workflows/${workflowId}`, updatedWorkflow);\n      setWorkflows(prev => prev.map(workflow => workflow._id === workflowId ? data : workflow));\n      alert(\"Workflow updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating workflow:\", error);\n      alert(\"Failed to update workflow.\");\n    }\n  };\n  const handleDeleteWorkflow = async workflowId => {\n    try {\n      await API.delete(`/workflows/${workflowId}`);\n      setWorkflows(prev => prev.filter(workflow => workflow._id !== workflowId));\n      alert(\"Workflow deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting workflow:\", error);\n      alert(\"Failed to delete workflow.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gradient-to-br from-gray-100 to-gray-200 min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-semibold text-gray-800 mb-6\",\n      children: \"Budget Workflow Designer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: \"Loading workflows...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(WorkflowDesigner, {\n      workflows: workflows,\n      onSaveWorkflow: handleSaveWorkflow,\n      onUpdateWorkflow: handleUpdateWorkflow,\n      onDeleteWorkflow: handleDeleteWorkflow,\n      component: \"Budget\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(BudgetWorkflowDesigner, \"nD1oeWkPyyC0+JJd3s102N2SBT0=\");\n_c = BudgetWorkflowDesigner;\nexport default BudgetWorkflowDesigner;\nvar _c;\n$RefreshReg$(_c, \"BudgetWorkflowDesigner\");","map":{"version":3,"names":["React","useState","useEffect","WorkflowDesigner","API","jsxDEV","_jsxDEV","BudgetWorkflowDesigner","orgId","_s","workflows","setWorkflows","loading","setLoading","fetchWorkflows","data","get","params","organisationId","component","error","console","handleSaveWorkflow","newWorkflow","post","workflow","prev","alert","handleUpdateWorkflow","workflowId","updatedWorkflow","put","map","_id","handleDeleteWorkflow","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSaveWorkflow","onUpdateWorkflow","onDeleteWorkflow","_c","$RefreshReg$"],"sources":["/Users/nirpekshnandan/Downloads/tesseract-Frontend/src/pages/BudgetWorkflowDesigner.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WorkflowDesigner from \"./WorkflowDesigner\";\nimport API from \"../utils/api\";\n\nconst BudgetWorkflowDesigner = ({ orgId }) => {\n  const [workflows, setWorkflows] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    // Fetch existing workflows for the organisation\n    const fetchWorkflows = async () => {\n      try {\n        setLoading(true);\n        const { data } = await API.get(\"/workflows\", {\n          params: { organisationId: orgId, component: \"Budget\" },\n        });\n        setWorkflows(data);\n      } catch (error) {\n        console.error(\"Error fetching workflows:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchWorkflows();\n  }, [orgId]);\n\n  const handleSaveWorkflow = async (newWorkflow) => {\n    try {\n      const { data } = await API.post(\"/workflows/create\", {\n        organisationId: orgId,\n        component: \"Budget\",\n        workflow: newWorkflow,\n      });\n      setWorkflows((prev) => [...prev, data]);\n      alert(\"Workflow saved successfully!\");\n    } catch (error) {\n      console.error(\"Error saving workflow:\", error);\n      alert(\"Failed to save workflow.\");\n    }\n  };\n\n  const handleUpdateWorkflow = async (workflowId, updatedWorkflow) => {\n    try {\n      const { data } = await API.put(`/workflows/${workflowId}`, updatedWorkflow);\n      setWorkflows((prev) =>\n        prev.map((workflow) => (workflow._id === workflowId ? data : workflow))\n      );\n      alert(\"Workflow updated successfully!\");\n    } catch (error) {\n      console.error(\"Error updating workflow:\", error);\n      alert(\"Failed to update workflow.\");\n    }\n  };\n\n  const handleDeleteWorkflow = async (workflowId) => {\n    try {\n      await API.delete(`/workflows/${workflowId}`);\n      setWorkflows((prev) => prev.filter((workflow) => workflow._id !== workflowId));\n      alert(\"Workflow deleted successfully!\");\n    } catch (error) {\n      console.error(\"Error deleting workflow:\", error);\n      alert(\"Failed to delete workflow.\");\n    }\n  };\n\n  return (\n    <div className=\"p-6 bg-gradient-to-br from-gray-100 to-gray-200 min-h-screen\">\n      <h1 className=\"text-3xl font-semibold text-gray-800 mb-6\">\n        Budget Workflow Designer\n      </h1>\n      {loading ? (\n        <div className=\"text-center\">Loading workflows...</div>\n      ) : (\n        <WorkflowDesigner\n          workflows={workflows}\n          onSaveWorkflow={handleSaveWorkflow}\n          onUpdateWorkflow={handleUpdateWorkflow}\n          onDeleteWorkflow={handleDeleteWorkflow}\n          component=\"Budget\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default BudgetWorkflowDesigner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}